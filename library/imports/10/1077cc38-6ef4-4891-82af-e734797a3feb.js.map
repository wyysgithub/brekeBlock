{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\phy.js"],"names":["cc","Class","extends","Component","properties","is_debug","gravity","p","onLoad","director","getPhysicsManager","enabled","getCollisionManager","Bits","PhysicsManager","DrawBits","debugDrawFlags","e_jointBit","e_shapeBit","enabledDebugDraw","enabledDrawBoundingBox"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,kBAAU,KAXF,EAWS;AACjB;AACAC,iBAASN,GAAGO,CAAH,CAAK,CAAL,EAAQ,CAAC,GAAT,CAbD,CAagB;AAbhB,KAHP;;AAmBL;AACAC,YAAQ,kBAAY;AAChB;AACA;AACA;AACAR,WAAGS,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C,CAJgB,CAIgC;AAChDX,WAAGS,QAAH,CAAYG,mBAAZ,GAAkCD,OAAlC,GAA4C,IAA5C,CALgB,CAKkC;AAClD;AACA;AACA,YAAI,KAAKN,QAAT,EAAmB;AAAE;AACjB,gBAAIQ,OAAOb,GAAGc,cAAH,CAAkBC,QAA7B,CADe,CACwB;AACvCf,eAAGS,QAAH,CAAYC,iBAAZ,GAAgCM,cAAhC,GAAiDH,KAAKI,UAAL,GAAkBJ,KAAKK,UAAxE;;AAEA;AACAlB,eAAGS,QAAH,CAAYG,mBAAZ,GAAkCO,gBAAlC,GAAqD,IAArD;AACAnB,eAAGS,QAAH,CAAYG,mBAAZ,GAAkCQ,sBAAlC,GAA2D,IAA3D;AACH,SAPD,MAQK;AAAE;AACHpB,eAAGS,QAAH,CAAYC,iBAAZ,GAAgCM,cAAhC,GAAiD,CAAjD;AACH;AACD;AACAhB,WAAGS,QAAH,CAAYC,iBAAZ,GAAgCJ,OAAhC,GAA0C,KAAKA,OAA/C;AACH;;AAED;AACA;;AAEA;AA9CK,CAAT","file":"phy.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        is_debug: false, // 是否显示调试信息;\r\n        // 重力加速度是一个向量, 有方向的,2D, Vec重力加速度的大小;\r\n        gravity: cc.p(0, -320), // 系统默认的\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 游戏引擎的总控制\r\n        // cc.Director, cc.director 区别呢？\r\n        // 大写的cc.Director是一个类, 小写cc.direcotr全局的实例\r\n        cc.director.getPhysicsManager().enabled = true; // 开启了物理引擎\r\n        cc.director.getCollisionManager().enabled = true; // 开启了碰撞检测系统\r\n        // 独立的形状，打开一个调试区域,游戏图像的，逻辑区域;\r\n        // 开始调试模式:\r\n        if (this.is_debug) { // 开启调试信息\r\n            var Bits = cc.PhysicsManager.DrawBits; // 这个是我们要显示的类型\r\n            cc.director.getPhysicsManager().debugDrawFlags = Bits.e_jointBit | Bits.e_shapeBit;\r\n\r\n            //碰撞检测\r\n            cc.director.getCollisionManager().enabledDebugDraw = true;\r\n            cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n        }\r\n        else { // 关闭调试信息\r\n            cc.director.getPhysicsManager().debugDrawFlags = 0;\r\n        }\r\n        // 重力加速度的配置\r\n        cc.director.getPhysicsManager().gravity = this.gravity;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});"]}